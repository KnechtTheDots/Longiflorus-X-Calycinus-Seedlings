post_pred_check(df, "day_4", lik = "normal")
# post_pred_check(df, "day_4", lik = "gamma")
# post_pred_check(df, "day_4", lik = "log-normal")
post_pred_check(df, "day_17", "normal")
# post_pred_check(df, "day_17", "gamma")
# post_pred_check(df, "day_17", "log-normal")
post_pred_check(df, "rgr", "normal")
# post_pred_check(df, "rgr", "gamma")
# post_pred_check(df, "rgr", "log-normal")
post_pred_check(df, "height_122", "normal")
# post_pred_check(df, "height_122", "gamma")
# post_pred_check(df, "height_122", "log-normal")
dag1 <- post_pred(df, "day_4", "normal")$delta_pp
dag14 <- post_pred(df, "day_17", "normal")$delta_pp
rgr <- post_pred(df, "rgr", "normal")$delta_pp
height <- post_pred(df, "height_122", "normal")$delta_pp
data.frame(DAG1 = dag1, DAG14= dag14,
RGR = rgr, Height = height) %>%
pivot_longer(1:4, names_to = "trait", values_to = "delta") %>%
mutate(trait = factor(trait, levels = c("Height", "DAG14","DAG1", "RGR"))) %>%
group_by(trait) %>%
summarise(upr = quantile(delta, .975),
lwr = quantile(delta, .025),
upr.5 = quantile(delta, .75),
lwr.5 = quantile(delta, .25)) %>%
ggplot() +
geom_vline(xintercept = 0, color = "grey", linewidth = 1) +
geom_errorbarh(aes(y = trait, xmin = lwr, xmax = upr), height = 0,
linewidth = 1) +
geom_errorbarh(aes(y = trait, xmin = lwr.5, xmax = upr.5), height = 0,
linewidth = 2) +
theme_minimal() +
labs(y = "Trait",
x = "O(F2) - E(F2)")
dag1 <- post_pred(df, "day_4", "normal")$boots
dag1 <- dag1 %>%
pivot_longer(1:5, names_to = "line", values_to = "trait") %>%
group_by(line) %>%
summarise(mu = round(mean(trait),2),
upr = round(quantile(trait, .975),2),
lwr = round(quantile(trait, .025),2),
upr.5 = round(quantile(trait, .75),2),
lwr.5 = round(quantile(trait, .25),2)) %>%
mutate(trait = "1DAG")
dag14 <- post_pred(df, "day_17", "normal")$boots
dag14 <- dag14 %>%
pivot_longer(1:5, names_to = "line", values_to = "trait") %>%
group_by(line) %>%
summarise(mu = round(mean(trait),2),
upr = round(quantile(trait, .975),2),
lwr = round(quantile(trait, .025),2),
upr.5 = round(quantile(trait, .75),2),
lwr.5 = round(quantile(trait, .25),2)) %>%
mutate(trait = "14DAG")
rgr <- post_pred(df, "rgr", "normal")$boots
rgr <- rgr %>%
pivot_longer(1:5, names_to = "line", values_to = "trait") %>%
group_by(line) %>%
summarise(mu = round(mean(trait),2),
upr = round(quantile(trait, .975),2),
lwr = round(quantile(trait, .025),2),
upr.5 = round(quantile(trait, .75),2),
lwr.5 = round(quantile(trait, .25),2)) %>%
mutate(trait = "RGR")
height <- post_pred(df, "height_122", "normal")$boots
height <- height %>%
pivot_longer(1:5, names_to = "line", values_to = "trait") %>%
group_by(line) %>%
summarise(mu = round(mean(trait),2),
upr = round(quantile(trait, .975),2),
lwr = round(quantile(trait, .025),2),
upr.5 = round(quantile(trait, .75),2),
lwr.5 = round(quantile(trait, .25),2)) %>%
mutate(trait = "Height")
library(knitr)
library(kableExtra)
tab_dat <- bind_rows(dag1, dag14, rgr, height)
tab_dat %>%
select(Line = line, Mean = mu, "2.5%" = lwr, "25%" = lwr.5,
"75%" = upr.5, "97.5%" = upr) %>%
mutate(Line = case_when(Line == "cal" ~ "Calycinus",
Line == "f1" ~ "F1",
Line == "f2" ~ "F2",
Line == "lon" ~ "Longiflorus",
Line == "e_f2" ~ "Expected F2")) %>%
kbl() %>%
kable_classic_2() %>%
add_header_above(c(" " = 1, "Posterior Distribution of Line Mean" = 5)) %>%
pack_rows("1DAG",1,5) %>%
pack_rows("14DAG",6,10) %>%
pack_rows("RGR", 11,15) %>%
pack_rows("Height",16,20)
(p1 <- dag1 %>%
mutate(plon = c(0, .51, .49, .5, 1),
group = c("a", letters[2:4], "a")) %>%
ggplot(aes(x = plon, y = mu, group = group, color = line)) +
geom_line() +
geom_errorbar(aes(x = plon, ymax = upr, ymin = lwr), width = 0,
linewidth = 1) +
geom_errorbar(aes(x = plon, ymax = upr.5, ymin = lwr.5), width = 0,
linewidth = 2) +
scale_color_manual(values = c("black", "red", "black", "blue", "black")) +
theme_minimal() +
labs(x = "Proportion Longiflorus"))
d <- read.csv("data/seed_growth_vs_seed_size.csv")
rgr_dat <- d %>%
drop_na(germ_day, death_day) %>%
mutate(ind = 1:105) %>%
pivot_longer(4:10, names_to = "day", values_to = "size") %>%
drop_na(size) %>%
mutate(l_size = log(size)) %>%
separate(day, into = (c("a", "day"))) %>%
mutate(day = as.numeric(day),
age = day - germ_day) %>%
filter(age > 0) %>%
select(ind, age, l_size)
full <- d %>% drop_na(germ_day, death_day) %>%
mutate(ind = 1:105) %>%
pivot_longer(4:10, names_to = "day", values_to = "size") %>%
drop_na(size) %>%
drop_na(size) %>%
separate(day, c("fubar", "day")) %>%
mutate(day = as.numeric(day)) %>%
select(ind, seed_size, germ_day, death_day, day, size) %>%
mutate(age = day - germ_day) %>%
filter(age == 1 | day == 17) %>%
mutate(tp = ifelse(age == 1, "start","finish")) %>%
pivot_wider(id_cols = c(ind, seed_size, germ_day, death_day),
names_from = tp, values_from = size)
mu <- mean(full$start[!(is.na(full$start))])
sd <- sd(full$start[!(is.na(full$start))])
full$start <- ifelse(is.na(full$start), -100, (full$start - mu)/sd)
full$finish <- stn(full$finish)
full$seed_size <- stn(full$seed_size)
full$survive <- full$death_day - 3
stan_dat <- list(
N = nrow(full),
N_tilde = 200,
N_obs = sum(full$start != -100),
N_miss = sum(full$start == -100),
ind = full$ind,
ii_obs = full$ind[full$start != -100],
ii_miss = full$ind[full$start == -100],
start_obs = full$start[full$start!=-100],
size_end = full$finish,
seed_size = full$seed_size,
germ_day = full$germ_day,
N_rgr = nrow(rgr_dat),
l_size = rgr_dat$l_size,
age = rgr_dat$age,
ind_rgr = rgr_dat$ind,
survive = full$survive,
x_tilde = seq(-3,3, l = 200)
)
mod <- cmdstan_model("scripts/size.stan")
fit <- mod$sample(
data = stan_dat,
chains = 4,
parallel_chains = 4,
show_messages = F
)
beta_surv <- fit$draws("beta_surv", format = "df")$beta_surv
hist(beta_surv)
abline(v = quantile(beta_surv, c(.025, .975)), col = "red", lwd = 3)
p <- fit$draws("p_tilde", format = "df")[,1:200]
mu <- apply(p, 2, mean)
upr <- apply(p, 2, quantile, .975)
lwr <- apply(p, 2, quantile, .025)
upr.5 <- apply(p,2,quantile, .75)
lwr.5 <- apply(p,2,quantile, .25)
data.frame(mu, upr, lwr, upr.5, lwr.5, x_tilde = stan_dat$x_tilde) %>%
ggplot(aes(x = x_tilde, y = mu)) +
geom_ribbon(aes(x = x_tilde, ymax = upr, ymin = lwr), color = "grey",
alpha = .25) +
geom_ribbon(aes(x = x_tilde, ymax = upr.5, ymin = lwr.5), color = "grey",
alpha = .25) +
theme_minimal() +
geom_line(linewidth = 1)
stan_dat
?rethinking::map
?alist
x <- rnorm(100)
a <- .5
b <- .5
y <- a + b*x + rnorm(100, 0, .1)
rstan:::rstudio_stanc("scripts/test.stan")
library(cmdstanr)
mod <- cmdstan_model("scripts/test.stan")
dat <- list(
N = length(y),
x = x,
y = y
)
fit <- mod$sample(
data = dat,
chains = 4,
parallel_chains = 4
)
fit$diagnostic_summary()
fit
fit$save_data_file()
fit$save_output_files()
rstan:::rstudio_stanc("scripts/size.stan")
library(tidyverse)
library(cmdstanr)
source("scripts/functions.R")
df <- read.csv("data/main.csv")
set.seed(12042014)
d <- read.csv("data/seed_growth_vs_seed_size.csv")
rgr_dat <- d %>%
drop_na(germ_day, death_day) %>%
mutate(ind = 1:105) %>%
pivot_longer(4:10, names_to = "day", values_to = "size") %>%
drop_na(size) %>%
mutate(l_size = log(size)) %>%
separate(day, into = (c("a", "day"))) %>%
mutate(day = as.numeric(day),
age = day - germ_day) %>%
filter(age > 0) %>%
select(ind, age, l_size)
full <- d %>% drop_na(germ_day, death_day) %>%
mutate(ind = 1:105) %>%
pivot_longer(4:10, names_to = "day", values_to = "size") %>%
drop_na(size) %>%
drop_na(size) %>%
separate(day, c("fubar", "day")) %>%
mutate(day = as.numeric(day)) %>%
select(ind, seed_size, germ_day, death_day, day, size) %>%
mutate(age = day - germ_day) %>%
filter(age == 1 | day == 17) %>%
mutate(tp = ifelse(age == 1, "start","finish")) %>%
pivot_wider(id_cols = c(ind, seed_size, germ_day, death_day),
names_from = tp, values_from = size)
mu <- mean(full$start[!(is.na(full$start))])
sd <- sd(full$start[!(is.na(full$start))])
full$start <- ifelse(is.na(full$start), -100, (full$start - mu)/sd)
full$finish <- stn(full$finish)
full$seed_size <- stn(full$seed_size)
full$survive <- full$death_day - 3
stan_dat <- list(
N = nrow(full),
N_tilde = 200,
N_obs = sum(full$start != -100),
N_miss = sum(full$start == -100),
ind = full$ind,
ii_obs = full$ind[full$start != -100],
ii_miss = full$ind[full$start == -100],
start_obs = full$start[full$start!=-100],
size_end = full$finish,
seed_size = full$seed_size,
germ_day = full$germ_day,
N_rgr = nrow(rgr_dat),
l_size = rgr_dat$l_size,
age = rgr_dat$age,
ind_rgr = rgr_dat$ind,
survive = full$survive,
x_tilde = seq(-3,3, l = 200)
)
mod <- cmdstan_model("scripts/size.stan")
fit <- mod$sample(
data = stan_dat,
chains = 4,
parallel_chains = 4
)
fit$diagnostic_summary()
p_rgr <- fit$draws("p_rgr", format = "df")[,1:200]
plot(apply(p_rgr, 2, mean) ~ stan_dat$x_tilde)
points(apply(p_rgr, 2, quantile, .025) ~ stan_dat$x_tilde)
points(apply(p_rgr, 2, quantile, .975) ~ stan_dat$x_tilde)
plot(apply(p_rgr, 2, mean) ~ stan_dat$x_tilde, ylim = c(0,1))
points(apply(p_rgr, 2, quantile, .975) ~ stan_dat$x_tilde)
points(apply(p_rgr, 2, quantile, .025) ~ stan_dat$x_tilde)
points(apply(p_rgr, 2, quantile, .25) ~ stan_dat$x_tilde)
points(apply(p_rgr, 2, quantile, .75) ~ stan_dat$x_tilde)
abline(h = 0)
abline(h = .5)
mod <- cmdstan_model("scripts/size.stan")
fit <- mod$sample(
data = stan_dat,
chains = 4,
parallel_chains = 4
)
fit$diagnostic_summary()
fit
fit$print("rgr")
fit$print("rgr", max_rows = 105)
d %>%
drop_na(germ_day, death_day) %>%
mutate(ind = 1:105) %>%
pivot_longer(4:10, names_to = "day", values_to = "size") %>%
drop_na(size) %>%
separate(day, into = (c("a", "day"))) %>%
mutate(day = as.numeric(day),
age = day - germ_day) %>%
filter(age > 0) %>%
select(ind, age, size)
d %>%
drop_na(germ_day, death_day) %>%
mutate(ind = 1:105) %>%
pivot_longer(4:10, names_to = "day", values_to = "size") %>%
drop_na(size) %>%
separate(day, into = (c("a", "day"))) %>%
mutate(day = as.numeric(day),
age = day - germ_day) %>%
filter(age > 0 & day < 17) %>%
select(ind, age, size)
d <- read.csv("data/seed_growth_vs_seed_size.csv")
rgr_dat <- d %>%
drop_na(germ_day, death_day) %>%
mutate(ind = 1:105) %>%
pivot_longer(4:10, names_to = "day", values_to = "size") %>%
drop_na(size) %>%
separate(day, into = (c("a", "day"))) %>%
mutate(day = as.numeric(day),
age = day - germ_day) %>%
filter(age > 0 & day < 17) %>%
select(ind, age, size)
full <- d %>% drop_na(germ_day, death_day) %>%
mutate(ind = 1:105) %>%
pivot_longer(4:10, names_to = "day", values_to = "size") %>%
drop_na(size) %>%
drop_na(size) %>%
separate(day, c("fubar", "day")) %>%
mutate(day = as.numeric(day)) %>%
select(ind, seed_size, germ_day, death_day, day, size) %>%
mutate(age = day - germ_day) %>%
filter(age == 1 | day == 17) %>%
mutate(tp = ifelse(age == 1, "start","finish")) %>%
pivot_wider(id_cols = c(ind, seed_size, germ_day, death_day),
names_from = tp, values_from = size)
mu <- mean(full$start[!(is.na(full$start))])
sd <- sd(full$start[!(is.na(full$start))])
full$start <- ifelse(is.na(full$start), -100, (full$start - mu)/sd)
full$finish <- stn(full$finish)
full$seed_size <- stn(full$seed_size)
full$survive <- full$death_day - 3
stan_dat <- list(
N = nrow(full),
N_tilde = 200,
N_obs = sum(full$start != -100),
N_miss = sum(full$start == -100),
ind = full$ind,
ii_obs = full$ind[full$start != -100],
ii_miss = full$ind[full$start == -100],
start_obs = full$start[full$start!=-100],
size_end = full$finish,
seed_size = full$seed_size,
germ_day = full$germ_day,
N_rgr = nrow(rgr_dat),
size = rgr_dat$size,
age = rgr_dat$age,
ind_rgr = rgr_dat$ind,
survive = full$survive,
x_tilde = seq(-3,3, l = 200)
)
stan_dat <- list(
N = nrow(full),
N_tilde = 200,
N_obs = sum(full$start != -100),
N_miss = sum(full$start == -100),
ind = full$ind,
ii_obs = full$ind[full$start != -100],
ii_miss = full$ind[full$start == -100],
start_obs = full$start[full$start!=-100],
size_end = full$finish,
seed_size = full$seed_size,
germ_day = full$germ_day,
N_rgr = nrow(rgr_dat),
size = rgr_dat$size,
age = rgr_dat$age,
ind_rgr = rgr_dat$ind,
survive = full$survive,
x_tilde = seq(-3,3, l = 200)
)
rstan:::rstudio_stanc("scripts/size.stan")
mod <- cmdstan_model("scripts/size.stan")
fit <- mod$sample(
data = stan_dat,
chains = 4,
parallel_chains = 4
)
stan_dat <- list(
N = nrow(full),
N_tilde = 200,
N_obs = sum(full$start != -100),
N_miss = sum(full$start == -100),
ind = full$ind,
ii_obs = full$ind[full$start != -100],
ii_miss = full$ind[full$start == -100],
start_obs = full$start[full$start!=-100],
size_end = full$finish,
seed_size = full$seed_size,
germ_day = full$germ_day,
N_rgr = nrow(rgr_dat),
size_rgr = rgr_dat$size,
age = rgr_dat$age,
ind_rgr = rgr_dat$ind,
survive = full$survive,
x_tilde = seq(-3,3, l = 200)
)
fit <- mod$sample(
data = stan_dat,
chains = 4,
parallel_chains = 4
)
fit$diagnostic_summary()
rstan:::rstudio_stanc("scripts/size.stan")
mod <- cmdstan_model("scripts/size.stan")
fit <- mod$sample(
data = stan_dat,
chains = 4,
parallel_chains = 4
)
fit$diagnostic_summary()
fit$loo()
rstan:::rstudio_stanc("scripts/size.stan")
rstan:::rstudio_stanc("scripts/size.stan")
mod <- cmdstan_model("scripts/size.stan")
fit <- mod$sample(
data = stan_dat,
chains = 4,
parallel_chains = 4
)
fit$diagnostic_summary()
fit$loo()
rstan:::rstudio_stanc("scripts/size.stan")
mod <- cmdstan_model("scripts/size.stan")
fit <- mod$sample(
data = stan_dat,
chains = 4,
parallel_chains = 4
)
fit$diagnostic_summary()
fit$loo()
fit$initialize()
fit$lp()
fit$functions
fit$cmdstan_diagnose()
d <- read.csv("data/seed_growth_vs_seed_size.csv")
rgr_dat <- d %>%
drop_na(germ_day, death_day) %>%
mutate(ind = 1:105) %>%
pivot_longer(4:10, names_to = "day", values_to = "size") %>%
drop_na(size) %>%
separate(day, into = (c("a", "day"))) %>%
mutate(day = as.numeric(day),
age = day - germ_day) %>%
filter(age > 0 & day < 17) %>%
select(ind, age, size)
full <- d %>% drop_na(germ_day, death_day) %>%
mutate(ind = 1:105) %>%
pivot_longer(4:10, names_to = "day", values_to = "size") %>%
drop_na(size) %>%
drop_na(size) %>%
separate(day, c("fubar", "day")) %>%
mutate(day = as.numeric(day)) %>%
select(ind, seed_size, germ_day, death_day, day, size) %>%
mutate(age = day - germ_day) %>%
filter(age == 1 | day == 17) %>%
mutate(tp = ifelse(age == 1, "start","finish")) %>%
pivot_wider(id_cols = c(ind, seed_size, germ_day, death_day),
names_from = tp, values_from = size)
mu <- mean(full$start[!(is.na(full$start))])
sd <- sd(full$start[!(is.na(full$start))])
full$start <- ifelse(is.na(full$start), -100, (full$start - mu)/sd)
full$finish <- stn(full$finish)
full$seed_size <- stn(full$seed_size)
full$survive <- full$death_day - 3
stan_dat <- list(
N = nrow(full),
N_tilde = 200,
N_obs = sum(full$start != -100),
N_miss = sum(full$start == -100),
ind = full$ind,
ii_obs = full$ind[full$start != -100],
ii_miss = full$ind[full$start == -100],
start_obs = full$start[full$start!=-100],
size_end = full$finish,
seed_size = full$seed_size,
germ_day = full$germ_day,
N_rgr = nrow(rgr_dat),
size_rgr = rgr_dat$size,
age = rgr_dat$age,
ind_rgr = rgr_dat$ind,
survive = full$survive,
x_tilde = seq(-3,3, l = 200)
)
mod <- cmdstan_model("scripts/size.stan")
fit <- mod$sample(
data = stan_dat,
chains = 4,
parallel_chains = 4,
show_messages = F
)
beta_surv <- fit$draws("beta_surv", format = "df")$beta_surv
hist(beta_surv)
abline(v = quantile(beta_surv, c(.025, .975)), col = "red", lwd = 3)
p <- fit$draws("p_tilde", format = "df")[,1:200]
mu <- apply(p, 2, mean)
upr <- apply(p, 2, quantile, .975)
lwr <- apply(p, 2, quantile, .025)
upr.5 <- apply(p,2,quantile, .75)
lwr.5 <- apply(p,2,quantile, .25)
data.frame(mu, upr, lwr, upr.5, lwr.5, x_tilde = stan_dat$x_tilde) %>%
ggplot(aes(x = x_tilde, y = mu)) +
geom_ribbon(aes(x = x_tilde, ymax = upr, ymin = lwr), color = "grey",
alpha = .25) +
geom_ribbon(aes(x = x_tilde, ymax = upr.5, ymin = lwr.5), color = "grey",
alpha = .25) +
theme_minimal() +
geom_line(linewidth = 1)
dag1 <- post_pred(df, "day_4", "normal")$boots
